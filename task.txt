ユーザA作成

ユーザB作成

ユーザAのパスワードを更新

ユーザBのメールアドレスを更新

タスク作成 (instance.saveを使用, ユーザAに紐付ける)

タスク作成 (Class.createを使用, ユーザBに紐付ける)

10件一括タスク作成(ユーザAに紐付ける)

タスク一覧を取得

１番目のタスクを取得

idがXのタスクを取得

最後のタスクを取得

userという変数にユーザAのオブジェクトを入れ、ユーザAに紐付くタスク一覧を取得

変数を用いずにユーザBに紐付くタスク一覧を取得

変数を用いずにユーザAに紐付くタスクのレコード数を取得

タスクのidリストを取得 (mapを使用)

タスクのidリストを取得 (pluckを使用)

タスクのidリストを取得 (idsを使用)

タスクのタイトルリストを取得 (mapを使用)
タスクのタイトルリストを取得 (pluckを使用)
ユーザAに紐付くタスクの中からステータスが「未対応」のタスクを作成日: 降順で取得
ユーザAに紐付くタスクの中から期限切れのタスクを取得
ユーザAに紐付くタスクの中から期限が今日のタスクを取得
ユーザAに紐付くタスクの中からステータスが期限が１週間後のタスクを取得
ユーザAに紐付くタスクの中からステータスが期限が１ヶ月後のタスクを取得
ユーザAに紐付くタスクの中からタイトルに「作業」という文字列が入っているタスクを取得
ユーザAに紐付くタスクの中からステータスが「完了」になっているタスクを取得
ユーザAに紐付くタスクの中からステータスが「未対応」のタスクを作成日: 降順で取得
ユーザAに紐付くタスクの一覧を取得したあと、最初のオブジェクトの更新日を取得
ユーザAに紐付くタスクの一覧を取得したあと、最後のオブジェクトのタイトルを取得
ユーザAに紐付くタスクの中からステータスが「未対応」のタスクを「対応中」に一括更新
ユーザAに紐付くタスクのタイトルを「作業依頼(n)」に一括更新 ※n: (1, 2, 3, ...n)
ユーザAに紐付くタスクの担当者を全てユーザBに一括更新
どれか１つのタスクを更新 (Class.updateを使用)
どれか１つのタスクを更新 (instance.updateを使用)
どれか１つのタスクを削除 (Class.destroyを使用)
どれか１つのタスクを削除 (instance.destroyを使用)
ユーザBに紐づいているタスクを一括削除